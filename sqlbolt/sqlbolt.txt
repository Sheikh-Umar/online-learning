SQL Lesson 1: SELECT queries 101 
(Link: https://sqlbolt.com/lesson/select_queries_introduction)
Exercise 1 Tasks
Q1: Find the title of each film
SELECT Title
FROM Movies;

Q2: Find the director of each film
SELECT Director
FROM Movies;

Q3: Find the title and director of each film
SELECT Title, Director
FROM Movies;

Q4: Find the title and year of each film
SELECT Title, Year
FROM Movies;

Q5: Find all the information about the film
SELECT *
FROM Movies;


SQL Lesson 2: Queries with constraints (Pt. 1)  (Link: https://sqlbolt.com/lesson/select_queries_with_constraints)
Exercise 2 - Tasks
Q1: Find the movie with the row id of 6
SELECT * FROM movies
WHERE Id = 6;

Q2: Find the movies released in the years between 2000 and 2010
SELECT *
FROM Movies
WHERE Year >= 2000 AND Year <= 2010;

Q3: Find the movies not released in the years between 2000 and 2010
SELECT *
FROM Movies
WHERE NOT (Year >= 2000 AND YEAR <= 2010);

Q4: Find the first 5 Pixar movies and their release year
SELECT Title, Year
FROM Movies
LIMIT 5;




SQL Lesson 3: Queries with constraints (Pt. 2) (Link: https://sqlbolt.com/lesson/select_queries_with_constraints_pt_2)
Exercise 3 Tasks
Q1: Find all the Toy Story movies
SELECT * FROM movies
WHERE Title LIKE "Toy Story%";

Q2: Find all the movies directed by John Lasseter
SELECT * FROM movies
WHERE Director = "John Lasseter";

Q3: Find all the movies (and director) not directed by John Lasseter
SELECT *
FROM Movies
WHERE Director != "John Lasseter";

Q4: Find all the WALL-* movies
SELECT *
FROM Movies
WHERE Title LIKE "WALL-%";




SQL Lesson 4: Filtering and sorting Query results (Link: https://sqlbolt.com/lesson/filtering_sorting_query_results)
Exercise 4 Tasks

Q1: List all directors of Pixar movies (alphabetically), without duplicates
SELECT Distinct Director
FROM Movies
ORDER BY Director;

Q2: List the last four Pixar movies released (ordered from most recent to least)
SELECT *
FROM Movies
ORDER BY Year DESC
LIMIT 4;

Q3: List the first five Pixar movies sorted alphabetically
SELECT *
FROM Movies
ORDER BY Title ASC
LIMIT 5;

Q4: List the next five Pixar movies sorted alphabetically
SELECT *
FROM Movies
ORDER BY Title ASC
LIMIT 5 OFFSET 5;




SQL Review: Simple SELECT Queries (Link: https://sqlbolt.com/lesson/select_queries_review)
Exercise Tasks
Q1: List all the Canadian cities and their populationsSELECT City, Population
FROM North_american_cities
WHERE Country = "Canada";

Q2: Order all the cities in the United States by their latitude from north to south
SELECT City, Latitude
FROM North_american_cities
WHERE Country = "United States"
ORDER BY Latitude DESC;

Q3: List all the cities west of Chicago, ordered from west to east 
SELECT City, Longitude
FROM North_american_cities
WHERE Longitude < 
(
    SELECT Longitude
    FROM North_american_cities
    WHERE City = "Chicago"
)
ORDER BY Longitude ASC;

Q4: List the two largest cities in Mexico (by population)
SELECT City, Population, Country
FROM North_american_cities
WHERE Country = "Mexico"
ORDER BY Population DESC
LIMIT 2;

Q5: List the third and fourth largest cities (by population) in the United States and their population 
SELECT City, Population, Country
FROM North_american_cities
WHERE Country = "United States"
ORDER BY Population DESC
LIMIT 2 OFFSET 2;




SQL Lesson 6: Multi-table queries with JOINs (Link: https://sqlbolt.com/lesson/select_queries_with_joins)
Exercise 6 Tasks
Q1: Find the domestic and international sales for each movie 
SELECT Title, Domestic_sales, International_sales
FROM Movies
INNER JOIN Boxoffice
ON Movies.Id = Boxoffice.Movie_Id;

Q2: Show the sales numbers for each movie that did better internationally rather than domestically 
SELECT Title, Domestic_sales, International_sales
FROM Movies
INNER JOIN Boxoffice
ON Movies.Id = Boxoffice.Movie_Id
WHERE International_sales > Domestic_sales;

Q3: List all the movies by their ratings in descending order 
SELECT Title, Rating
FROM Movies
INNER JOIN Boxoffice
ON Movies.Id = Boxoffice.Movie_Id
ORDER BY Rating DESC;




SQL Lesson 7: Outer JOINs (Link: https://sqlbolt.com/lesson/select_queries_with_outer_joins)
Exercise 7 Tasks
Q1: Find the list of all buildings that have employees
SELECT Distinct Building
FROM Employees;

Q2: Find the list of all buildings and their capacity
SELECT *
FROM Buildings;

Q3: List all buildings and the distinct employee roles in each building (including empty buildings) 
SELECT Distinct Building_name, Role
FROM Buildings
LEFT OUTER JOIN Employees
ON Buildings.Building_name = Employees.Building;




SQL Lesson 8: A short note on NULLs (Link: https://sqlbolt.com/lesson/select_queries_with_nulls)
Exercise 8 - Tasks
Q1: Find the name and role of all employees who have not been assigned to a building 
SELECT Name, Role
FROM Employees
WHERE Building IS NULL;


Q2: Find the names of the buildings that hold no employees
SELECT Building_name, Name
FROM Buildings
LEFT OUTER JOIN Employees
ON Buildings.Building_name = Employees.Building
WHERE NAME IS NULL;




